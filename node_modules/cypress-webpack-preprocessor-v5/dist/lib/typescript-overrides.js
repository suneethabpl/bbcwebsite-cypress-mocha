"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var debug = require('debug')('cypress:webpack');
var _ = require('lodash');
var sourceMapOverride = null;
exports.getProgramOptions = function (rootNamesOrOptions, options) {
    return _.isArray(rootNamesOrOptions) ? options : rootNamesOrOptions.options;
};
exports.tryRequireTypescript = function () {
    try {
        // reset each time this is called
        sourceMapOverride = null;
        var typescript_1 = require('typescript');
        debug('typescript found, overriding typescript.createProgram()');
        var createProgram_1 = typescript_1.createProgram;
        typescript_1.createProgram = function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            var rootNamesOrOptions = args[0], _options = args[1];
            var options = exports.getProgramOptions(rootNamesOrOptions, _options);
            debug('typescript unmodified createProgram options %o', options);
            // if sourceMap has been set then apply
            // these overrides to force typescript
            // to generate the right sourcemaps
            if (sourceMapOverride !== null) {
                options.sourceMap = sourceMapOverride;
                delete options.inlineSources;
                delete options.inlineSourceMap;
                debug('typescript modified createProgram options %o', options);
            }
            // @ts-ignore
            return createProgram_1.apply(typescript_1, args);
        };
        return typescript_1;
    }
    catch (err) {
        debug('typescript not found');
        // for testing
        return err;
    }
};
exports.overrideSourceMaps = function (val) {
    sourceMapOverride = val;
};
exports.getSourceMapOverride = function () {
    return sourceMapOverride;
};
exports.tryRequireTypescript();
